# Generated by Django 5.0.4 on 2024-04-17 19:34

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=25, verbose_name='Категория (Время дня)')),
            ],
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=25, verbose_name='Тип меню')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=25, verbose_name='Название')),
                ('calories', models.PositiveIntegerField(verbose_name='ккал/100г')),
                ('category', models.CharField(choices=[('Нет', 'Нет'), ('Рыба и морепродукты', 'Рыба и морепродукты'), ('Мясо', 'Мясо'), ('Зерновые', 'Зерновые'), ('Продукты пчеловодства', 'Продукты пчеловодства'), ('Орехи и бобовые', 'Орехи и бобовые'), ('Молочные продукты', 'Молочные продукты')], default='Нет', max_length=25, verbose_name='Категория (Аллергии)')),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('calories', models.PositiveIntegerField(blank=True, default=0, verbose_name='Общая калорийность')),
                ('categories', models.ManyToManyField(related_name='categories', to='orderapp.category', verbose_name='Категория (Время дня)')),
                ('menus', models.ManyToManyField(related_name='recipies', to='orderapp.menu', verbose_name='Типы меню')),
            ],
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit', models.CharField(max_length=10, verbose_name='Единица измерения')),
                ('quantity', models.FloatField(verbose_name='Количество')),
                ('grams', models.PositiveIntegerField(verbose_name='Граммов в ед. измерения')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orderapp.product', verbose_name='Продукт')),
                ('recipe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ingredients', to='orderapp.recipe', verbose_name='Рецепт')),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateField(default=django.utils.timezone.now, verbose_name='Начало подписки')),
                ('months', models.CharField(choices=[('1', '1'), ('3', '3'), ('6', '6'), ('12', '12')], default='1', max_length=5, verbose_name='Количество месяцев')),
                ('end', models.DateField(editable=False, verbose_name='Конец подписки')),
                ('persons', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6')], default='1', max_length=5, verbose_name='Количество персон')),
                ('cost', models.PositiveIntegerField(verbose_name='Стоимость')),
                ('promocode', models.BooleanField(default=False, verbose_name='Промокод')),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='orderapp.menu', verbose_name='Тип меню')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('subscription', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='orderapp.subscription', verbose_name='Подписка')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
